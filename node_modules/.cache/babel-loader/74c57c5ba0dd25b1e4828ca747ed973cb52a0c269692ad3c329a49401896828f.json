{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\WEB\\\\Academy\\\\exam react\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0456\\u0432\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Modal from \"./components/Modal\";\nimport TaskList from \"./components/TaskList\";\nimport Filters from \"./components/Filters\";\nimport UserModal from \"./components/UserModal\"; // Новий компонент\n\n// Інтерфейси для типізації\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Головний компонент App\nconst App = () => {\n  _s();\n  // Стан задач та проектів\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n\n  // Стан для форми додавання задачі\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    dueDate: \"\",\n    description: \"\",\n    tags: [],\n    priority: \"Medium\",\n    projectId: undefined\n  });\n\n  // Стан для форми додавання проекту\n  const [newProject, setNewProject] = useState(\"\");\n\n  // Стан для пошуку та фільтрації\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterTags, setFilterTags] = useState([]);\n  const [filterDateRange, setFilterDateRange] = useState(\"\");\n  const [filterCompleted, setFilterCompleted] = useState(null); // Новий фільтр\n\n  // Стан для модального вікна додавання задачі та проекту\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Стан для фільтрів (показати/приховати)\n  const [isFiltersVisible, setIsFiltersVisible] = useState(false);\n\n  // Стан для виду списку задач\n  const [taskView, setTaskView] = useState(\"list\");\n\n  // Стан для модального вікна користувача\n  const [isUserModalOpen, setIsUserModalOpen] = useState(false);\n\n  // Стан для інформації про користувача\n  const [userInfo, setUserInfo] = useState({\n    fullName: \"Володимир Федоренко\",\n    position: \"Керівник технічної підтримки\",\n    photo: \"\",\n    // Початкова фотографія порожня\n    background: \"\" // Початковий фон порожній\n  });\n\n  // Завантаження даних з localStorage при ініціалізації\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    const storedProjects = localStorage.getItem(\"projects\");\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    if (storedProjects) {\n      setProjects(JSON.parse(storedProjects));\n    }\n    if (storedUserInfo) {\n      setUserInfo(JSON.parse(storedUserInfo));\n    }\n  }, []);\n\n  // Збереження задач у localStorage щоразу, коли tasks змінюється\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Збереження проектів у localStorage щоразу, коли projects змінюється\n  useEffect(() => {\n    localStorage.setItem(\"projects\", JSON.stringify(projects));\n  }, [projects]);\n\n  // Збереження інформації про користувача\n  useEffect(() => {\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n  }, [userInfo]);\n\n  // Додавання нової задачі\n  const addTask = () => {\n    if (newTask.title.trim() === \"\") {\n      alert(\"Назва задачі не може бути порожньою\");\n      return;\n    }\n    const task = {\n      id: Date.now(),\n      ...newTask,\n      completed: false // Початково не виконано\n    };\n    setTasks([...tasks, task]);\n    // Очистити форму\n    setNewTask({\n      title: \"\",\n      dueDate: \"\",\n      description: \"\",\n      tags: [],\n      priority: \"Medium\",\n      projectId: undefined\n    });\n    // Закрити модальне вікно\n    setIsModalOpen(false);\n  };\n\n  // Видалення задачі\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Позначення задачі як виконаної\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Додавання нового проекту\n  const addProject = () => {\n    if (newProject.trim() === \"\") {\n      alert(\"Назва проекту не може бути порожньою\");\n      return;\n    }\n    // Перевірка унікальності назви проекту\n    if (projects.some(project => project.name.toLowerCase() === newProject.toLowerCase())) {\n      alert(\"Проект з такою назвою вже існує\");\n      return;\n    }\n    const project = {\n      id: Date.now(),\n      name: newProject\n    };\n    setProjects([...projects, project]);\n    setNewProject(\"\");\n  };\n\n  // Фільтрація та пошук задач\n  const filteredTasks = tasks.filter(task => {\n    // Фільтр за пошуковим запитом\n    const matchesSearch = task.title.toLowerCase().includes(searchTerm.toLowerCase()) || task.description.toLowerCase().includes(searchTerm.toLowerCase());\n\n    // Фільтр за пріоритетом\n    const matchesPriority = filterPriority ? task.priority === filterPriority : true;\n\n    // Фільтр за тегами\n    const matchesTags = filterTags.length > 0 ? filterTags.every(tag => task.tags.includes(tag)) : true;\n\n    // Фільтр за датою\n    let matchesDate = true;\n    if (filterDateRange) {\n      const today = new Date();\n      const taskDate = new Date(task.dueDate);\n      switch (filterDateRange) {\n        case \"day\":\n          matchesDate = taskDate.toDateString() === today.toDateString();\n          break;\n        case \"week\":\n          const weekFromNow = new Date();\n          weekFromNow.setDate(today.getDate() + 7);\n          matchesDate = taskDate >= today && taskDate <= weekFromNow;\n          break;\n        case \"month\":\n          const monthFromNow = new Date();\n          monthFromNow.setMonth(today.getMonth() + 1);\n          matchesDate = taskDate >= today && taskDate <= monthFromNow;\n          break;\n        default:\n          matchesDate = true;\n      }\n    }\n\n    // Фільтр за виконаними задачами\n    const matchesCompleted = filterCompleted === null ? true : task.completed === filterCompleted;\n    return matchesSearch && matchesPriority && matchesTags && matchesDate && matchesCompleted;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundImage: userInfo.background ? `url(${userInfo.background})` : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0441\\u043F\\u0440\\u0430\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => setIsUserModalOpen(true),\n        children: [userInfo.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userInfo.photo,\n          alt: \"User\",\n          className: \"user-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-placeholder\",\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: userInfo.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-filters-button specific-button\",\n        onClick: () => setIsFiltersVisible(!isFiltersVisible),\n        children: isFiltersVisible ? \"Приховати фільтри\" : \"Показати фільтри\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-task-button specific-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: taskView === \"tiles\",\n            onChange: () => setTaskView(taskView === \"list\" ? \"tiles\" : \"list\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-label\",\n          children: taskView === \"list\" ? \"Список\" : \"Плитки\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), isFiltersVisible && /*#__PURE__*/_jsxDEV(Filters, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      filterPriority: filterPriority,\n      setFilterPriority: setFilterPriority,\n      filterTags: filterTags,\n      setFilterTags: setFilterTags,\n      filterDateRange: filterDateRange,\n      setFilterDateRange: setFilterDateRange,\n      filterCompleted: filterCompleted,\n      setFilterCompleted: setFilterCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      projects: projects,\n      deleteTask: deleteTask,\n      toggleTaskCompletion: toggleTaskCompletion,\n      view: taskView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0456\",\n          value: newTask.title,\n          onChange: e => setNewTask({\n            ...newTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: newTask.dueDate,\n            onChange: e => setNewTask({\n              ...newTask,\n              dueDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\u041E\\u043F\\u0438\\u0441 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0456\",\n          value: newTask.description,\n          onChange: e => setNewTask({\n            ...newTask,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0422\\u0435\\u0433\\u0438 (\\u0447\\u0435\\u0440\\u0435\\u0437 \\u043A\\u043E\\u043C\\u0443)\",\n          value: newTask.tags.join(\",\"),\n          onChange: e => setNewTask({\n            ...newTask,\n            tags: e.target.value.split(\",\").map(tag => tag.trim()).filter(tag => tag !== \"\")\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTask.priority,\n          onChange: e => setNewTask({\n            ...newTask,\n            priority: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"\\u041D\\u0438\\u0437\\u044C\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"\\u0421\\u0435\\u0440\\u0435\\u0434\\u043D\\u0456\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"\\u0412\\u0438\\u0441\\u043E\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTask.projectId || \"\",\n          onChange: e => setNewTask({\n            ...newTask,\n            projectId: e.target.value ? Number(e.target.value) : undefined\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0411\\u0435\\u0437 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: project.id,\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-button\",\n          onClick: addTask,\n          children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-project-in-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443\",\n            value: newProject,\n            onChange: e => setNewProject(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-project-button\",\n            onClick: addProject,\n            children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isUserModalOpen,\n      onClose: () => setIsUserModalOpen(false),\n      userInfo: userInfo,\n      setUserInfo: setUserInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8N0LkRsGCZBQUkAZUD07zCUGvvU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Modal","TaskList","Filters","UserModal","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","projects","setProjects","newTask","setNewTask","title","dueDate","description","tags","priority","projectId","undefined","newProject","setNewProject","searchTerm","setSearchTerm","filterPriority","setFilterPriority","filterTags","setFilterTags","filterDateRange","setFilterDateRange","filterCompleted","setFilterCompleted","isModalOpen","setIsModalOpen","isFiltersVisible","setIsFiltersVisible","taskView","setTaskView","isUserModalOpen","setIsUserModalOpen","userInfo","setUserInfo","fullName","position","photo","background","storedTasks","localStorage","getItem","storedProjects","storedUserInfo","JSON","parse","setItem","stringify","addTask","trim","alert","task","id","Date","now","completed","deleteTask","filter","toggleTaskCompletion","map","addProject","some","project","name","toLowerCase","filteredTasks","matchesSearch","includes","matchesPriority","matchesTags","length","every","tag","matchesDate","today","taskDate","toDateString","weekFromNow","setDate","getDate","monthFromNow","setMonth","getMonth","matchesCompleted","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","checked","onChange","view","isOpen","onClose","placeholder","value","e","target","join","split","Number","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/WEB/Academy/exam react/Проектів/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Modal from \"./components/Modal\";\nimport TaskList from \"./components/TaskList\";\nimport Filters from \"./components/Filters\";\nimport UserModal from \"./components/UserModal\"; // Новий компонент\n\n// Інтерфейси для типізації\ninterface Task {\n  id: number;\n  title: string;\n  dueDate: string; // ISO формат дати\n  description: string;\n  tags: string[];\n  priority: \"Low\" | \"Medium\" | \"High\";\n  projectId?: number;\n  completed: boolean; // Додане поле для позначення виконання\n}\n\ninterface Project {\n  id: number;\n  name: string;\n}\n\ninterface UserInfo {\n  fullName: string;\n  position: string;\n  photo: string; // URL або base64 рядок для фотографії\n  background: string; // URL або base64 рядок для фонового зображення\n}\n\n// Головний компонент App\nconst App: React.FC = () => {\n  // Стан задач та проектів\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  // Стан для форми додавання задачі\n  const [newTask, setNewTask] = useState<Omit<Task, \"id\" | \"completed\">>({\n    title: \"\",\n    dueDate: \"\",\n    description: \"\",\n    tags: [],\n    priority: \"Medium\",\n    projectId: undefined,\n  });\n\n  // Стан для форми додавання проекту\n  const [newProject, setNewProject] = useState<string>(\"\");\n\n  // Стан для пошуку та фільтрації\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [filterPriority, setFilterPriority] = useState<string>(\"\");\n  const [filterTags, setFilterTags] = useState<string[]>([]);\n  const [filterDateRange, setFilterDateRange] = useState<\n    \"day\" | \"week\" | \"month\" | \"\"\n  >(\"\");\n  const [filterCompleted, setFilterCompleted] = useState<boolean | null>(null); // Новий фільтр\n\n  // Стан для модального вікна додавання задачі та проекту\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  // Стан для фільтрів (показати/приховати)\n  const [isFiltersVisible, setIsFiltersVisible] = useState<boolean>(false);\n\n  // Стан для виду списку задач\n  const [taskView, setTaskView] = useState<\"list\" | \"tiles\">(\"list\");\n\n  // Стан для модального вікна користувача\n  const [isUserModalOpen, setIsUserModalOpen] = useState<boolean>(false);\n\n  // Стан для інформації про користувача\n  const [userInfo, setUserInfo] = useState<UserInfo>({\n    fullName: \"Володимир Федоренко\",\n    position: \"Керівник технічної підтримки\",\n    photo: \"\", // Початкова фотографія порожня\n    background: \"\", // Початковий фон порожній\n  });\n\n  // Завантаження даних з localStorage при ініціалізації\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    const storedProjects = localStorage.getItem(\"projects\");\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\n\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n\n    if (storedProjects) {\n      setProjects(JSON.parse(storedProjects));\n    }\n\n    if (storedUserInfo) {\n      setUserInfo(JSON.parse(storedUserInfo));\n    }\n  }, []);\n\n  // Збереження задач у localStorage щоразу, коли tasks змінюється\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Збереження проектів у localStorage щоразу, коли projects змінюється\n  useEffect(() => {\n    localStorage.setItem(\"projects\", JSON.stringify(projects));\n  }, [projects]);\n\n  // Збереження інформації про користувача\n  useEffect(() => {\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n  }, [userInfo]);\n\n  // Додавання нової задачі\n  const addTask = () => {\n    if (newTask.title.trim() === \"\") {\n      alert(\"Назва задачі не може бути порожньою\");\n      return;\n    }\n    const task: Task = {\n      id: Date.now(),\n      ...newTask,\n      completed: false, // Початково не виконано\n    };\n    setTasks([...tasks, task]);\n    // Очистити форму\n    setNewTask({\n      title: \"\",\n      dueDate: \"\",\n      description: \"\",\n      tags: [],\n      priority: \"Medium\",\n      projectId: undefined,\n    });\n    // Закрити модальне вікно\n    setIsModalOpen(false);\n  };\n\n  // Видалення задачі\n  const deleteTask = (id: number) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Позначення задачі як виконаної\n  const toggleTaskCompletion = (id: number) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // Додавання нового проекту\n  const addProject = () => {\n    if (newProject.trim() === \"\") {\n      alert(\"Назва проекту не може бути порожньою\");\n      return;\n    }\n    // Перевірка унікальності назви проекту\n    if (\n      projects.some(\n        (project) => project.name.toLowerCase() === newProject.toLowerCase()\n      )\n    ) {\n      alert(\"Проект з такою назвою вже існує\");\n      return;\n    }\n    const project: Project = {\n      id: Date.now(),\n      name: newProject,\n    };\n    setProjects([...projects, project]);\n    setNewProject(\"\");\n  };\n\n  // Фільтрація та пошук задач\n  const filteredTasks = tasks.filter((task) => {\n    // Фільтр за пошуковим запитом\n    const matchesSearch =\n      task.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      task.description.toLowerCase().includes(searchTerm.toLowerCase());\n\n    // Фільтр за пріоритетом\n    const matchesPriority = filterPriority\n      ? task.priority === filterPriority\n      : true;\n\n    // Фільтр за тегами\n    const matchesTags =\n      filterTags.length > 0\n        ? filterTags.every((tag) => task.tags.includes(tag))\n        : true;\n\n    // Фільтр за датою\n    let matchesDate = true;\n    if (filterDateRange) {\n      const today = new Date();\n      const taskDate = new Date(task.dueDate);\n      switch (filterDateRange) {\n        case \"day\":\n          matchesDate = taskDate.toDateString() === today.toDateString();\n          break;\n        case \"week\":\n          const weekFromNow = new Date();\n          weekFromNow.setDate(today.getDate() + 7);\n          matchesDate = taskDate >= today && taskDate <= weekFromNow;\n          break;\n        case \"month\":\n          const monthFromNow = new Date();\n          monthFromNow.setMonth(today.getMonth() + 1);\n          matchesDate = taskDate >= today && taskDate <= monthFromNow;\n          break;\n        default:\n          matchesDate = true;\n      }\n    }\n\n    // Фільтр за виконаними задачами\n    const matchesCompleted =\n      filterCompleted === null ? true : task.completed === filterCompleted;\n\n    return (\n      matchesSearch &&\n      matchesPriority &&\n      matchesTags &&\n      matchesDate &&\n      matchesCompleted\n    );\n  });\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: userInfo.background\n          ? `url(${userInfo.background})`\n          : \"none\",\n      }}\n    >\n      <h1>Список справ</h1>\n\n      {/* Верхній правий блок для кнопки користувача */}\n      <div className=\"user-button-container\">\n        <button\n          className=\"user-button\"\n          onClick={() => setIsUserModalOpen(true)}\n        >\n          {userInfo.photo ? (\n            <img src={userInfo.photo} alt=\"User\" className=\"user-photo\" />\n          ) : (\n            <div className=\"user-placeholder\">U</div>\n          )}\n          <span className=\"user-name\">{userInfo.fullName}</span>\n        </button>\n      </div>\n\n      {/* Контейнер для кнопок та перемикача */}\n      <div className=\"top-controls\">\n        {/* Кнопка для відкриття фільтрів */}\n        <button\n          className=\"toggle-filters-button specific-button\"\n          onClick={() => setIsFiltersVisible(!isFiltersVisible)}\n        >\n          {isFiltersVisible ? \"Приховати фільтри\" : \"Показати фільтри\"}\n        </button>\n\n        {/* Кнопка для відкриття модального вікна */}\n        <button\n          className=\"create-task-button specific-button\"\n          onClick={() => setIsModalOpen(true)}\n        >\n          Створити завдання\n        </button>\n\n        {/* Перемикач для виду задач */}\n        <div className=\"toggle-switch\">\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={taskView === \"tiles\"}\n              onChange={() =>\n                setTaskView(taskView === \"list\" ? \"tiles\" : \"list\")\n              }\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <span className=\"toggle-label\">\n            {taskView === \"list\" ? \"Список\" : \"Плитки\"}\n          </span>\n        </div>\n      </div>\n\n      {/* Фільтри та пошук */}\n      {isFiltersVisible && (\n        <Filters\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n          filterPriority={filterPriority}\n          setFilterPriority={setFilterPriority}\n          filterTags={filterTags}\n          setFilterTags={setFilterTags}\n          filterDateRange={filterDateRange}\n          setFilterDateRange={setFilterDateRange}\n          filterCompleted={filterCompleted}\n          setFilterCompleted={setFilterCompleted}\n        />\n      )}\n\n      {/* Список задач */}\n      <TaskList\n        tasks={filteredTasks}\n        projects={projects}\n        deleteTask={deleteTask}\n        toggleTaskCompletion={toggleTaskCompletion}\n        view={taskView}\n      />\n\n      {/* Модальне вікно для додавання задачі та проекту */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <div className=\"add-task\">\n          <h2>Додати задачу</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Назва задачі\"\n            value={newTask.title}\n            onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n          />\n          <div className=\"date-picker\">\n            <input\n              type=\"datetime-local\"\n              value={newTask.dueDate}\n              onChange={(e) =>\n                setNewTask({ ...newTask, dueDate: e.target.value })\n              }\n            />\n          </div>\n          <textarea\n            placeholder=\"Опис задачі\"\n            value={newTask.description}\n            onChange={(e) =>\n              setNewTask({ ...newTask, description: e.target.value })\n            }\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Теги (через кому)\"\n            value={newTask.tags.join(\",\")}\n            onChange={(e) =>\n              setNewTask({\n                ...newTask,\n                tags: e.target.value\n                  .split(\",\")\n                  .map((tag) => tag.trim())\n                  .filter((tag) => tag !== \"\"),\n              })\n            }\n          />\n          <select\n            value={newTask.priority}\n            onChange={(e) =>\n              setNewTask({\n                ...newTask,\n                priority: e.target.value as Task[\"priority\"],\n              })\n            }\n          >\n            <option value=\"Low\">Низький</option>\n            <option value=\"Medium\">Середній</option>\n            <option value=\"High\">Високий</option>\n          </select>\n          <select\n            value={newTask.projectId || \"\"}\n            onChange={(e) =>\n              setNewTask({\n                ...newTask,\n                projectId: e.target.value ? Number(e.target.value) : undefined,\n              })\n            }\n          >\n            <option value=\"\">Без проекту</option>\n            {projects.map((project) => (\n              <option key={project.id} value={project.id}>\n                {project.name}\n              </option>\n            ))}\n          </select>\n          <button className=\"add-task-button\" onClick={addTask}>\n            Додати задачу\n          </button>\n\n          {/* Розділ для створення проекту */}\n          <div className=\"add-project-in-modal\">\n            <h2>Додати проект</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Назва проекту\"\n              value={newProject}\n              onChange={(e) => setNewProject(e.target.value)}\n            />\n            <button className=\"add-project-button\" onClick={addProject}>\n              Додати проект\n            </button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* Модальне вікно для користувача */}\n      <UserModal\n        isOpen={isUserModalOpen}\n        onClose={() => setIsUserModalOpen(false)}\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}